// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("URSULA_DB_URL")
}

model CasbinRule {
  id    Int     @id @default(autoincrement())
  ptype String
  v0    String?
  v1    String?
  v2    String?
  v3    String?
  v4    String?
  v5    String?

  @@map("casbin_rule")
}

model Account {
  id                 String   @id @default(uuid())
  userId             String   @db.NVarChar(30)
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String   @db.NVarChar(30)
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ResetCode {
  id         BigInt     @id @default(autoincrement())
  email      String     @unique
  token      String
  expires    DateTime
}

model User {
  id            String    @id @db.NVarChar(30)
  name          String?
  nameKana      String?
  image         String?
  accounts      Account[]
  sessions      Session[]
  // schedule      Schedule[] @ignore
  password      String

  companyId     String?   @db.NVarChar(10)
  company       Company?  @relation(fields: [companyId], references: [id])
  contacts      Contact[] @ignore
  Operations    Operation[]
  role          Int       @default(1)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt
}


model Operation {
  id                           BigInt     @id @default(autoincrement())
  code                         String     @db.NVarChar(10) @unique
  isSecurityWork               Boolean?   @default(false)
  changedNotificationFlag      Boolean?
  valveOpenFlag                Boolean?
  isExpiredExchange            Boolean    @default(false)
  status                       Int        @db.TinyInt @default(1)
  prePauseStatus               Int?       @db.TinyInt
  pauseTimestamp               DateTime?
  pauseDuration                Int?       @db.TinyInt
  customerNumber               String?    @db.NVarChar(1000)
  postalCode                   String?    @db.NVarChar(8)
  municipality                 String?    @db.NVarChar(50)
  address                      String?    @db.NVarChar(100)
  housingType                  Int?       @db.TinyInt
  buildingNameRoomNumber       String?    @db.NVarChar(100)
  name                         String?    @db.NVarChar(60)
  nameKana                     String?    @db.NVarChar(100)
  phoneNumber                  String?    @db.NVarChar(20)
  phoneNumberType              Int?       @db.TinyInt
  assignedWorkerId             String?    @db.NVarChar(30)
  memo                         String?    @db.NVarChar(500)
  scheduledDate                DateTime?  @db.Date
  postcardStartDate            DateTime?  @db.Date
  postcardEndDate              DateTime?  @db.Date
  scheduledTime                String?
  footprint                    Int?       @db.TinyInt
  postcardOutputTimestamp      DateTime?  @db.DateTime
  absenceNoticeDeliveryDate    DateTime?  @db.Date
  operationType                Int?       @db.TinyInt
  completedAt                  DateTime?  @db.DateTime
  exchangingDate               DateTime?  @db.DateTime
  removingMeterManufacturer    String?    @db.NVarChar(2)
  removingMeterModel           String?    @db.NVarChar(2)
  removingMeterSize            String?    @db.NVarChar(15)
  removingMeterNumber          String?    @db.NVarChar(20)
  removingMeterValue           Int?       @db.Int
  removingMeterInspectionDate  DateTime?  @db.DateTime
  removingMeterImagePath       String?
  removingMeterMaximumUsage    Int?
  referenceDate                DateTime?  @db.DateTime
  position                     String?
  installingMeterManufacturer  String?    @db.NVarChar(2)
  installingMeterModel         String?    @db.NVarChar(2)
  installingMeterSize          String?    @db.NVarChar(15)
  installingMeterNumber        String?
  installingMeterValue         Int?
  installingMeterReferenceDate DateTime? @db.Date
  installingMeterImagePath     String?
  installingMeterMaximumUsage  Int?
  beforeWorkInspectionType     Int?       @db.TinyInt
  beforeWorkKpa                Int?       @db.Int
  beforeWorkResult             Boolean?
  afterWorkInspectionType      Int?       @db.TinyInt
  afterWorkKpa                 Int?       @db.Int
  afterWorkResult              Boolean?

  signatureImgPath             String?

  contacts                     Contact[]
  createdBy                    String     @db.NVarChar(30)
  createdByUser                User      @relation(fields: [createdBy], references: [id])

  createdAt              DateTime   @default(now())
  updatedAt              DateTime   @default(now()) @updatedAt

  @@index(fields: [customerNumber])
}

model Meter {
  meterModel          String     @id @db.NVarChar(20)
  serialNumber        String     @db.NVarChar(20)
  meterType           String     @db.NVarChar(20)
  meterMaximumUsage   Int        @db.Int
}

model Company {
  id          String       @id @db.NVarChar(10)
  name        String       @db.NVarChar(60)
  users       User[]       @ignore
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now()) @updatedAt
}

model Contact {
  id                  BigInt    @id @default(autoincrement())
  operationId         BigInt
  operation           Operation @relation(fields: [operationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  contactType         Int       @db.TinyInt
  details             String    @default("")
  contactedAt         DateTime  @db.DateTime
  contactedBy         String    @db.NVarChar(30)
  contactedByUser     User      @relation(fields: [contactedBy], references: [id])
  createdBy           String    @db.NVarChar(30)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @default(now()) @updatedAt
}


model MeterManufacturerMaster {
  id                  Int    @id @default(autoincrement())
  code                String @db.NVarChar(2)
}

model MeterSizeMaster {
  id                  Int    @id @default(autoincrement())
  code                String @db.NVarChar(15)
}

model MeterModelMaster {
  id                  Int    @id @default(autoincrement())
  code                String @db.NVarChar(2)
}

model Customer {
  customerNumber                String    @id @db.VarChar(12)
  postalCode                    String?   @db.VarChar(8)
  municipality                  String?   @db.VarChar(50)
  address                       String?   @db.VarChar(100)
  housingType                   Int?      @db.TinyInt
  buildingNameRoomNumber        String?   @db.VarChar(100)
  name                          String?   @db.VarChar(60)
  nameKana                      String?   @db.VarChar(100)
  gasSupKeiCd                   String?   @db.VarChar(1)
  standYmd                      Int?      @db.SmallInt
  gyoshuCd                      String?   @db.VarChar(3)
  userAdminCd                   String?   @db.Char
  userTownCd                    String?   @db.Char
  userStreetNo                  Int?      @db.SmallInt
  userHouseNo                   Int?      @db.SmallInt
  userSpecialNo                 Int?      @db.SmallInt
  userKataKNm                   String?   @db.VarChar(20)
  userKataNm                    String?   @db.VarChar(40)
  userKNm                       String?   @db.VarChar(20)
  userNm                        String?   @db.VarChar(40)
  telKbn                        String?   @db.VarChar(1)
  userTel                       String?   @db.VarChar(12)
  kaiSu                         Int?      @db.SmallInt
  posCd                         String?   @db.VarChar(1)
  makerCd                       String?   @db.VarChar(1)
  patNo                         String?   @db.VarChar(2)
  meterNumber                   Int?      @db.Int
  meterNo                       String?   @db.VarChar(7)
  meterYmd                      DateTime? @db.DateTime
  usedSu                        Int?      @db.Int
  meterPutKbn                   String?   @db.VarChar(1)
  meterPutYmd                   DateTime? @db.DateTime
  meterInfoKbn                  String?   @db.VarChar(1)
  meterTurnOnKbn                String?   @db.VarChar(1)
  meterTurnOnYmd                DateTime? @db.DateTime
  meterTurnOffKbn               String?   @db.VarChar(1)
  meterTurnOffYmd               DateTime? @db.DateTime
  meterRemoveKbn                String?   @db.VarChar(1)
  meterRemoveYmd                DateTime? @db.DateTime
  meterReadKbn                  String?   @db.VarChar(1)
  meterReadYmd                  DateTime? @db.DateTime
  noteCd                        String?   @db.VarChar(1)
  keyNo                         Int?      @db.SmallInt
  supplyNo                      String?   @db.VarChar(6)
  contactTel                    String?   @db.VarChar(12)
  pastMeterSu1                  Int?      @db.Int
  pastMeterSu2                  Int?      @db.Int
  pastSupKei3                   String?   @db.VarChar(1)
  pastMeterSu3                  Int?      @db.Int
  pastMeterSu4                  Int?      @db.Int
  disaReblkCd                   String?   @db.VarChar(1)
  jigyoshaCd                    String?   @db.Char(5)
  kiguChosaYmd                  DateTime? @db.DateTime
  tatemonoKbn                   String?   @db.Char(2)
}
